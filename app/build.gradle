plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
}

// Apply Firebase plugins only if google-services.json is present
def hasGoogleServices = file("google-services.json").exists()
if (hasGoogleServices) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
}

android {
    namespace "com.repasdelaflemme.app"
    compileSdk 35

    defaultConfig {
        applicationId "com.repasdelaflemme.app"  // âœ… Changez en "com.repasdelaflemme.app"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables { useSupportLibrary true }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField "Boolean", "ENABLE_LOGGING", "true"
            if (hasGoogleServices) {
                firebaseCrashlytics {
                    mappingFileUploadEnabled false
                }
            }
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "ENABLE_LOGGING", "false"
            if (hasGoogleServices) {
                firebaseCrashlytics {
                    mappingFileUploadEnabled true
                }
            }
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    packaging {
        resources {
            excludes += ["/META-INF/{AL2.0,LGPL2.1}"]
        }
    }
}

dependencies {
    // AndroidX Core
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.recyclerview
    implementation libs.cardview

    // Lifecycle
    implementation libs.lifecycle.viewmodel
    implementation libs.lifecycle.livedata

    // Navigation
    implementation libs.navigation.fragment
    implementation libs.navigation.ui

    // Room
    implementation libs.room.runtime
    implementation libs.room.ktx
    kapt libs.room.compiler

    // Gson
    implementation libs.gson

    // Glide
    implementation libs.glide
    annotationProcessor libs.glide.compiler

    // Timber
    implementation libs.timber

    // Network / Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.okhttp.logging

    // Coroutines
    implementation libs.kotlinx.coroutines.android

    // Firebase Crashlytics (conditional by presence of google-services.json at build time)
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.crashlytics
    implementation libs.firebase.analytics

    // Testing
    testImplementation libs.junit
    testImplementation libs.androidx.arch.core.testing
    testImplementation libs.mockito.core
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.androidx.test.espresso.core
}
